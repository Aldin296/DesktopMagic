### YamlMime:ManagedReference
items:
- uid: DesktopMagicPluginAPI.Inputs.ComboBox
  commentId: T:DesktopMagicPluginAPI.Inputs.ComboBox
  id: ComboBox
  parent: DesktopMagicPluginAPI.Inputs
  children:
  - DesktopMagicPluginAPI.Inputs.ComboBox.#ctor(System.String[])
  - DesktopMagicPluginAPI.Inputs.ComboBox.Items
  - DesktopMagicPluginAPI.Inputs.ComboBox.Value
  langs:
  - csharp
  - vb
  name: ComboBox
  nameWithType: ComboBox
  fullName: DesktopMagicPluginAPI.Inputs.ComboBox
  type: Class
  source:
    remote:
      path: src/DesktopMagicPluginAPI/Inputs/ComboBox.cs
      branch: develop
      repo: https://github.com/Stone-Red-Code/DesktopMagic.git
    id: ComboBox
    path: Inputs/ComboBox.cs
    startLine: 7
  assemblies:
  - DesktopMagicPluginAPI
  namespace: DesktopMagicPluginAPI.Inputs
  summary: "\nRepresents a selection control with a drop-down list.\n"
  example: []
  syntax:
    content: 'public class ComboBox : Element'
    content.vb: >-
      Public Class ComboBox

          Inherits Element
  inheritance:
  - System.Object
  - DesktopMagicPluginAPI.Inputs.Element
  inheritedMembers:
  - DesktopMagicPluginAPI.Inputs.Element.OnValueChanged
  - DesktopMagicPluginAPI.Inputs.Element.ValueChanged
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DesktopMagicPluginAPI.Inputs.ComboBox.Items
  commentId: P:DesktopMagicPluginAPI.Inputs.ComboBox.Items
  id: Items
  parent: DesktopMagicPluginAPI.Inputs.ComboBox
  langs:
  - csharp
  - vb
  name: Items
  nameWithType: ComboBox.Items
  fullName: DesktopMagicPluginAPI.Inputs.ComboBox.Items
  type: Property
  source:
    remote:
      path: src/DesktopMagicPluginAPI/Inputs/ComboBox.cs
      branch: develop
      repo: https://github.com/Stone-Red-Code/DesktopMagic.git
    id: Items
    path: Inputs/ComboBox.cs
    startLine: 14
  assemblies:
  - DesktopMagicPluginAPI
  namespace: DesktopMagicPluginAPI.Inputs
  summary: "\nGets the collection used to generate the content of the <xref href=\"DesktopMagicPluginAPI.Inputs.ComboBox\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ObservableCollection<string> Items { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ObservableCollection{System.String}
    content.vb: Public ReadOnly Property Items As ObservableCollection(Of String)
  overload: DesktopMagicPluginAPI.Inputs.ComboBox.Items*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DesktopMagicPluginAPI.Inputs.ComboBox.Value
  commentId: P:DesktopMagicPluginAPI.Inputs.ComboBox.Value
  id: Value
  parent: DesktopMagicPluginAPI.Inputs.ComboBox
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ComboBox.Value
  fullName: DesktopMagicPluginAPI.Inputs.ComboBox.Value
  type: Property
  source:
    remote:
      path: src/DesktopMagicPluginAPI/Inputs/ComboBox.cs
      branch: develop
      repo: https://github.com/Stone-Red-Code/DesktopMagic.git
    id: Value
    path: Inputs/ComboBox.cs
    startLine: 20
  assemblies:
  - DesktopMagicPluginAPI
  namespace: DesktopMagicPluginAPI.Inputs
  summary: "\nGets the currently selected item associated with this <xref href=\"DesktopMagicPluginAPI.Inputs.ComboBox\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: If you assign a value to this property, the displayed text in the user interface will not be changed.
  example: []
  syntax:
    content: public string Value { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Value As String
  overload: DesktopMagicPluginAPI.Inputs.ComboBox.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DesktopMagicPluginAPI.Inputs.ComboBox.#ctor(System.String[])
  commentId: M:DesktopMagicPluginAPI.Inputs.ComboBox.#ctor(System.String[])
  id: '#ctor(System.String[])'
  parent: DesktopMagicPluginAPI.Inputs.ComboBox
  langs:
  - csharp
  - vb
  name: ComboBox(String[])
  nameWithType: ComboBox.ComboBox(String[])
  fullName: DesktopMagicPluginAPI.Inputs.ComboBox.ComboBox(System.String[])
  type: Constructor
  source:
    remote:
      path: src/DesktopMagicPluginAPI/Inputs/ComboBox.cs
      branch: develop
      repo: https://github.com/Stone-Red-Code/DesktopMagic.git
    id: .ctor
    path: Inputs/ComboBox.cs
    startLine: 37
  assemblies:
  - DesktopMagicPluginAPI
  namespace: DesktopMagicPluginAPI.Inputs
  summary: "\nInitializes a new instance of the <xref href=\"DesktopMagicPluginAPI.Inputs.Label\" data-throw-if-not-resolved=\"false\"></xref> class with the provided <code data-dev-comment-type=\"paramref\" class=\"paramref\">items</code>.\n"
  example: []
  syntax:
    content: public ComboBox(params string[] items)
    parameters:
    - id: items
      type: System.String[]
      description: ''
    content.vb: Public Sub New(ParamArray items As String())
  overload: DesktopMagicPluginAPI.Inputs.ComboBox.#ctor*
  nameWithType.vb: ComboBox.ComboBox(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DesktopMagicPluginAPI.Inputs.ComboBox.ComboBox(System.String())
  name.vb: ComboBox(String())
references:
- uid: DesktopMagicPluginAPI.Inputs
  commentId: N:DesktopMagicPluginAPI.Inputs
  name: DesktopMagicPluginAPI.Inputs
  nameWithType: DesktopMagicPluginAPI.Inputs
  fullName: DesktopMagicPluginAPI.Inputs
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: DesktopMagicPluginAPI.Inputs.Element
  commentId: T:DesktopMagicPluginAPI.Inputs.Element
  parent: DesktopMagicPluginAPI.Inputs
  name: Element
  nameWithType: Element
  fullName: DesktopMagicPluginAPI.Inputs.Element
- uid: DesktopMagicPluginAPI.Inputs.Element.OnValueChanged
  commentId: E:DesktopMagicPluginAPI.Inputs.Element.OnValueChanged
  parent: DesktopMagicPluginAPI.Inputs.Element
  name: OnValueChanged
  nameWithType: Element.OnValueChanged
  fullName: DesktopMagicPluginAPI.Inputs.Element.OnValueChanged
- uid: DesktopMagicPluginAPI.Inputs.Element.ValueChanged
  commentId: M:DesktopMagicPluginAPI.Inputs.Element.ValueChanged
  parent: DesktopMagicPluginAPI.Inputs.Element
  name: ValueChanged()
  nameWithType: Element.ValueChanged()
  fullName: DesktopMagicPluginAPI.Inputs.Element.ValueChanged()
  spec.csharp:
  - uid: DesktopMagicPluginAPI.Inputs.Element.ValueChanged
    name: ValueChanged
    nameWithType: Element.ValueChanged
    fullName: DesktopMagicPluginAPI.Inputs.Element.ValueChanged
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DesktopMagicPluginAPI.Inputs.Element.ValueChanged
    name: ValueChanged
    nameWithType: Element.ValueChanged
    fullName: DesktopMagicPluginAPI.Inputs.Element.ValueChanged
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DesktopMagicPluginAPI.Inputs.ComboBox
  commentId: T:DesktopMagicPluginAPI.Inputs.ComboBox
  name: ComboBox
  nameWithType: ComboBox
  fullName: DesktopMagicPluginAPI.Inputs.ComboBox
- uid: DesktopMagicPluginAPI.Inputs.ComboBox.Items*
  commentId: Overload:DesktopMagicPluginAPI.Inputs.ComboBox.Items
  name: Items
  nameWithType: ComboBox.Items
  fullName: DesktopMagicPluginAPI.Inputs.ComboBox.Items
- uid: System.Collections.ObjectModel.ObservableCollection{System.String}
  commentId: T:System.Collections.ObjectModel.ObservableCollection{System.String}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ObservableCollection`1
  name: ObservableCollection<String>
  nameWithType: ObservableCollection<String>
  fullName: System.Collections.ObjectModel.ObservableCollection<System.String>
  nameWithType.vb: ObservableCollection(Of String)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of System.String)
  name.vb: ObservableCollection(Of String)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection`1
  commentId: T:System.Collections.ObjectModel.ObservableCollection`1
  isExternal: true
  name: ObservableCollection<T>
  nameWithType: ObservableCollection<T>
  fullName: System.Collections.ObjectModel.ObservableCollection<T>
  nameWithType.vb: ObservableCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T)
  name.vb: ObservableCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: DesktopMagicPluginAPI.Inputs.ComboBox.Value*
  commentId: Overload:DesktopMagicPluginAPI.Inputs.ComboBox.Value
  name: Value
  nameWithType: ComboBox.Value
  fullName: DesktopMagicPluginAPI.Inputs.ComboBox.Value
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: DesktopMagicPluginAPI.Inputs.Label
  commentId: T:DesktopMagicPluginAPI.Inputs.Label
  name: Label
  nameWithType: Label
  fullName: DesktopMagicPluginAPI.Inputs.Label
- uid: DesktopMagicPluginAPI.Inputs.ComboBox.#ctor*
  commentId: Overload:DesktopMagicPluginAPI.Inputs.ComboBox.#ctor
  name: ComboBox
  nameWithType: ComboBox.ComboBox
  fullName: DesktopMagicPluginAPI.Inputs.ComboBox.ComboBox
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
